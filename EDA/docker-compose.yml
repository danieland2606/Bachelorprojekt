version: '3.7'
services:
  ui:
    build:
      args:
        mode: "prod"
        customerService: "http://customer:8081"
        policyService: "http://policy:8080"
      context: ../UI
      dockerfile: Dockerfile
    container_name: ui-service-l
    env_file:
      - ../UI/ui.env
    networks:
      - "default"
    ports:
      - "80:8000"



  customer:
    build:
      context: ./
      dockerfile: ./CustomerService/Dockerfile
      args:
        service: CustomerService
    container_name: customer-service
    networks:
      - "default"
    environment:
      - spring.rabbitmq.host=rabbitmq
      - spring.datasource.url=jdbc:mariadb://customerdb:3306/Customer
      - spring.datasource.username=root
      - spring.datasource.password=test
      - spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
  #    - spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect
    ports:
      - "81:8081"
    depends_on:
      customerdb:
        condition: service_healthy
      rabbitmq:
        condition: service_started

  customerdb:
    image: mariadb:latest
    container_name: customerdb
    command: --general-log=1
    networks:
      - "default"
    environment:
      MARIADB_ROOT_PASSWORD: test
      MYSQL_DATABASE: Customer
      MYSQL_USER: user
      MYSQL_PASSWORD: test12345
    healthcheck:
      test: "mariadb --user=root --password=$$MARIADB_ROOT_PASSWORD --execute \"SHOW DATABASES;\""
      interval: 5s
      timeout: 20s
      retries: 10



  notification:
    build:
      context: ./
      dockerfile: ./NotificationService/Dockerfile
      args:
        service: NotificationService
    container_name: notification-service-l
    networks:
      - "default"
    environment:
      - spring.rabbitmq.host=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_started



  policy:
    build:
      context: ./
      dockerfile: ./PolicyService/Dockerfile
      args:
        service: PolicyService
    container_name: policy-service
    depends_on:
      policydb:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    networks:
      - "default"
    ports:
      - "82:8080"
    environment:
      - RABBIT_HOST=rabbitmq
      - spring.datasource.url=jdbc:mariadb://policydb:3306/Policy
      - spring.datasource.username=user
      - spring.datasource.password=123456789

  policydb:
    image: mariadb:latest
    container_name: policydb
    networks:
      - "default"
    environment:
      MARIADB_ROOT_PASSWORD: test
      MYSQL_DATABASE: Policy
      MYSQL_USER: user
      MYSQL_PASSWORD: 123456789
    healthcheck:
      test: "mariadb --user=root --password=$$MARIADB_ROOT_PASSWORD --execute \"SHOW DATABASES;\""
      interval: 5s
      timeout: 20s
      retries: 10
    #ports:
    #  - "3306:3306"
    volumes:
      - policydb_data:/var/lib/mysql



  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq-l
    networks:
      - "default"
    ports:
      - "15671:15671"
      - "15672:15672"
      - "5671:5671"
      - "5672:5672"

volumes:
  policydb_data: